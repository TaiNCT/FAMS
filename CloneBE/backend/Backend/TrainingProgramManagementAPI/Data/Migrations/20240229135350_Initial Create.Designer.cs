// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Entities.Context;

#nullable disable

namespace TrainingProgramManagementAPI.Data.Migrations
{
    [DbContext(typeof(FamsContext))]
    [Migration("20240229135350_Initial Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.AssessmentScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssesmentSchemeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("assesmentSchemeId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<double?>("Assignment")
                        .HasColumnType("float")
                        .HasColumnName("assignment");

                    b.Property<double?>("Final")
                        .HasColumnType("float")
                        .HasColumnName("final");

                    b.Property<double?>("FinalPractice")
                        .HasColumnType("float")
                        .HasColumnName("final_practice");

                    b.Property<double?>("FinalTheory")
                        .HasColumnType("float")
                        .HasColumnName("final_theory");

                    b.Property<double?>("Gpa")
                        .HasColumnType("float")
                        .HasColumnName("gpa");

                    b.Property<double?>("Quiz")
                        .HasColumnType("float")
                        .HasColumnName("quiz");

                    b.Property<string>("SyllabusId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabus_id");

                    b.HasKey("Id")
                        .HasName("PK__Assessme__3213E83FB978B6FB");

                    b.HasIndex("SyllabusId");

                    b.ToTable("AssessmentScheme", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignmentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("assignmentId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("AssignmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignmentType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Assignme__3213E83F7A5E6252");

                    b.HasIndex("ModuleId");

                    b.HasIndex(new[] { "AssignmentId" }, "UQ__Assignme__52C218214C093618")
                        .IsUnique();

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.AttendeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendeeTypeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("attendeeTypeId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("AttendeeTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Attendee__3213E83F84282634");

                    b.HasIndex(new[] { "AttendeeTypeId" }, "UQ__Attendee__114FA69245342566")
                        .IsUnique();

                    b.HasIndex(new[] { "AttendeeTypeName" }, "attendee_type_unique")
                        .IsUnique();

                    b.ToTable("AttendeeType", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptedAttendee")
                        .HasColumnType("int");

                    b.Property<int>("ActualAttendee")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AttendeeLevelId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("classId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("FsuId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("fsu_id");

                    b.Property<string>("LocationId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("PlannedAttendee")
                        .HasColumnType("int");

                    b.Property<string>("ReviewBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SlotTime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("TrainingProgramCode")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Class__3213E83FCA48A773");

                    b.HasIndex("AttendeeLevelId");

                    b.HasIndex("FsuId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TrainingProgramCode");

                    b.HasIndex(new[] { "ClassId" }, "UQ__Class__7577347FF6AD2CF4")
                        .IsUnique();

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.ClassUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ClassId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId", "ClassId")
                        .HasName("PK__ClassUse__0B395E30E4C67046");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassUser", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeliveryTypeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("deliveryTypeId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descriptions");

                    b.Property<string>("Icon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Delivery__3213E83FC15D3F86");

                    b.HasIndex(new[] { "Name" }, "UQ__Delivery__72E12F1B177ADEA7")
                        .IsUnique();

                    b.HasIndex(new[] { "DeliveryTypeId" }, "UQ__Delivery__BA19297B6176554A")
                        .IsUnique();

                    b.ToTable("DeliveryType", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailSend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSendId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("emailSendId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<int>("ReceiverType")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TemplateId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id")
                        .HasName("PK__EmailSen__3213E83F3F5B0336");

                    b.HasIndex("SenderId");

                    b.HasIndex("TemplateId");

                    b.HasIndex(new[] { "EmailSendId" }, "UQ__EmailSen__4B3B46D7A46A64B5")
                        .IsUnique();

                    b.ToTable("EmailSend", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailSendStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("EmailSendStudentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("emailSendStudentId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ReceiverType")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__EmailSen__3213E83F8CDE158B");

                    b.HasIndex("EmailId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex(new[] { "EmailSendStudentId" }, "UQ__EmailSen__2D96D8D6C3D961E7")
                        .IsUnique();

                    b.ToTable("EmailSendStudent", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTemplateId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("emailTemplateId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__EmailTem__3213E83FE2C75866");

                    b.HasIndex(new[] { "EmailTemplateId" }, "UQ__EmailTem__C443B5106EBE293E")
                        .IsUnique();

                    b.ToTable("EmailTemplate", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Fsu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FsuId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("fsuId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__fsu__3213E83F6BA5BBB1");

                    b.HasIndex(new[] { "FsuId" }, "UQ__fsu__E1FCEFCA8A70E292")
                        .IsUnique();

                    b.ToTable("fsu", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("locationId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Location__3214EC07D1938511");

                    b.HasIndex(new[] { "LocationId" }, "UQ__Location__30646B6F0C1C5BC5")
                        .IsUnique();

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MajorId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("majorId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Major__3213E83F9673AB07");

                    b.HasIndex(new[] { "Name" }, "FK_MAJOR_NAME")
                        .IsUnique();

                    b.HasIndex(new[] { "MajorId" }, "UQ__Major__A5B1B4B5DEA77469")
                        .IsUnique();

                    b.ToTable("Major", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("moduleId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Module__3213E83F9FA0D766");

                    b.HasIndex(new[] { "ModuleId" }, "UQ__Module__8EEC8E16A3D5A820")
                        .IsUnique();

                    b.ToTable("Module", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.OutputStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descriptions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("OutputStandardId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("outputStandardId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.HasKey("Id")
                        .HasName("PK__OutputSt__3213E83F10CD5257");

                    b.HasIndex(new[] { "OutputStandardId" }, "UQ__OutputSt__BED5012DA3635214")
                        .IsUnique();

                    b.ToTable("OutputStandard", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ModuleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("QuizId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("quizId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("QuizName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Quiz__3213E83FC0A5F013");

                    b.HasIndex("ModuleId");

                    b.HasIndex(new[] { "QuizId" }, "UQ__Quiz__CFF54C3C00F26B80")
                        .IsUnique();

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.QuizStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QuizId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("QuizStudentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("quizStudentId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("StudentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__QuizStud__3213E83FBE688614");

                    b.HasIndex("QuizId");

                    b.HasIndex("StudentId");

                    b.ToTable("QuizStudent", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.ReservedClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservedClassId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("reservedClassId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id")
                        .HasName("PK__Reserved__3213E83F2E8E78D5");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "ReservedClassId" }, "UQ__Reserved__12EF4C5072FCB98D")
                        .IsUnique();

                    b.ToTable("ReservedClass", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("roleId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83FF479330D");

                    b.HasIndex(new[] { "RoleId" }, "UQ__Role__CD98462B6030D1EF")
                        .IsUnique();

                    b.HasIndex(new[] { "RoleName" }, "role_name_unique")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.RolePermission", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PermissionId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("PK__RolePerm__6400A1A89B80BCF9");

                    b.HasIndex(new[] { "RoleId" }, "UQ__RolePerm__8AFACE1BAC74F8B5")
                        .IsUnique();

                    b.HasIndex(new[] { "PermissionId" }, "UQ__RolePerm__EFA6FB2E95AC195C")
                        .IsUnique();

                    b.ToTable("RolePermission", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignmentId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("Score1")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Score");

                    b.Property<string>("ScoreId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("scoreId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Score__3213E83F90A87152");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "ScoreId" }, "UQ__Score__B56A0C8CCE7E16FB")
                        .IsUnique();

                    b.ToTable("Score", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faaccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FAAccount");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("Gpa")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("GPA");

                    b.Property<DateTime>("GraduatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MajorId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RECer");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("studentId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Student__3213E83F37F48545");

                    b.HasIndex("MajorId");

                    b.HasIndex(new[] { "StudentId" }, "UQ__Student__4D11D63D7B074F93")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttendingStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CertificationStatus")
                        .HasColumnType("int");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("FinalScore")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("Gpalevel")
                        .HasColumnType("int")
                        .HasColumnName("GPALevel");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<string>("StudentClassId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("studentClassId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id")
                        .HasName("PK__StudentC__3213E83FD2FCBE9E");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "StudentClassId" }, "UQ__StudentC__114B9902D9CFED03")
                        .IsUnique();

                    b.ToTable("StudentClass", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.StudentModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("ModuleLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("ModuleScore")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("StudentModuleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("studentModuleId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.HasKey("Id")
                        .HasName("PK__StudentM__3213E83FC78C781B");

                    b.HasIndex("ModuleId");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "StudentModuleId" }, "UQ__StudentM__4A54FA6620B2B562")
                        .IsUnique();

                    b.ToTable("StudentModule", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Syllabus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttendeeNumber")
                        .HasColumnType("int")
                        .HasColumnName("attendee_number");

                    b.Property<string>("CourseObjective")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("course_objective");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<byte[]>("DeliveryPrinciple")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("delivery_principle");

                    b.Property<double?>("Hours")
                        .HasColumnType("float")
                        .HasColumnName("hours");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("SyllabusId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabusId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("TechnicalRequirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("technical_requirement");

                    b.Property<string>("TopicCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("topic_code");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("topic_name");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("PK__Syllabus__3213E83F43057209");

                    b.HasIndex(new[] { "SyllabusId" }, "UQ__Syllabus__915EDF81276B6197")
                        .IsUnique();

                    b.HasIndex(new[] { "TopicCode" }, "topic_code_unique")
                        .IsUnique();

                    b.ToTable("Syllabus", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int?>("DayNo")
                        .HasColumnType("int")
                        .HasColumnName("day_no");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("SyllabusDayId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabusDayId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("SyllabusId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabus_id");

                    b.HasKey("Id")
                        .HasName("PK__Syllabus__3213E83F91ED0402");

                    b.HasIndex("SyllabusId");

                    b.HasIndex(new[] { "SyllabusDayId" }, "UQ__Syllabus__6F1A138137C61246")
                        .IsUnique();

                    b.ToTable("SyllabusDay", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("SyllabusDayId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabus_day_id");

                    b.Property<string>("SyllabusUnitId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabusUnitId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<int>("UnitNo")
                        .HasColumnType("int")
                        .HasColumnName("unit_no");

                    b.HasKey("Id")
                        .HasName("PK__Syllabus__3213E83FA8C36ECD");

                    b.HasIndex("SyllabusDayId");

                    b.HasIndex(new[] { "SyllabusUnitId" }, "UQ__Syllabus__D5A44901F079FD64")
                        .IsUnique();

                    b.ToTable("SyllabusUnit", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TechnicalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TechnicalCodeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("technicalCodeId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("TechnicalCodeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Technica__3213E83FE26B9A1D");

                    b.HasIndex(new[] { "TechnicalCodeId" }, "UQ__Technica__7E6FA295E09BE7AD")
                        .IsUnique();

                    b.HasIndex(new[] { "TechnicalCodeName" }, "technical_code_unique_name")
                        .IsUnique();

                    b.ToTable("TechnicalCode", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TechnicalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TechnicalGroupId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("technicalGroupId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("TechnicalGroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Technica__3213E83FE7BC530C");

                    b.HasIndex(new[] { "TechnicalGroupName" }, "TechnicalGroupNameUnique")
                        .IsUnique();

                    b.HasIndex(new[] { "TechnicalGroupId" }, "UQ__Technica__07542F35CF70F813")
                        .IsUnique();

                    b.ToTable("TechnicalGroup", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsFile")
                        .HasColumnType("bit")
                        .HasColumnName("is_file");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("TrainingMaterialId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("trainingMaterialId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("UnitChapterId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("unit_chapter_id");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PK__Training__3213E83FF678E92B");

                    b.HasIndex("UnitChapterId");

                    b.HasIndex(new[] { "TrainingMaterialId" }, "UQ__Training__E3CB00D6B202C1D6")
                        .IsUnique();

                    b.ToTable("TrainingMaterial", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TechnicalCodeId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TechnicalGroupId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("TrainingProgramCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id")
                        .HasName("PK__Training__3213E83F90EAAA70");

                    b.HasIndex("TechnicalCodeId");

                    b.HasIndex("TechnicalGroupId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "TrainingProgramCode" }, "UQ__Training__8245E6A3B677DBC3")
                        .IsUnique();

                    b.ToTable("TrainingProgram", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingProgramModule", b =>
                {
                    b.Property<string>("ModuleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProgramId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("ModuleId");

                    b.HasIndex(new[] { "ProgramId" }, "UQ__Training__752560593A81E55E")
                        .IsUnique();

                    b.ToTable("TrainingProgramModule", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.UnitChapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterNo")
                        .HasColumnType("int")
                        .HasColumnName("chapter_no");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("DeliveryTypeId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("delivery_type_id");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit")
                        .HasColumnName("is_online");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("OutputStandardId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("output_standard_id");

                    b.Property<string>("SyllabusUnitId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabus_unit_id");

                    b.Property<string>("UnitChapterId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("unitChapterId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.HasKey("Id")
                        .HasName("PK__UnitChap__3213E83FBA27657A");

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("OutputStandardId");

                    b.HasIndex("SyllabusUnitId");

                    b.HasIndex(new[] { "UnitChapterId" }, "UQ__UnitChap__A4B0833C52C67D7D")
                        .IsUnique();

                    b.ToTable("UnitChapter", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("userId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F17DCC196");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "EmailUnique")
                        .IsUnique();

                    b.HasIndex(new[] { "UserId" }, "UQ__User__CB9A1CFE18846C55")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UsernameUnique")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserPermissionId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("userPermissionId")
                        .HasDefaultValueSql("(CONVERT([nvarchar](36),newid()))");

                    b.HasKey("Id")
                        .HasName("PK__UserPerm__3214EC076C80C724");

                    b.HasIndex(new[] { "UserPermissionId" }, "UQ__UserPerm__0E30AD2E4F65BF14")
                        .IsUnique();

                    b.ToTable("UserPermission", (string)null);
                });

            modelBuilder.Entity("TrainingProgramSyllabus", b =>
                {
                    b.Property<string>("SyllabusId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("syllabus_id");

                    b.Property<string>("TrainingProgramCode")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("training_program_code");

                    b.HasKey("SyllabusId", "TrainingProgramCode")
                        .HasName("PK__Training__CF42F2E07A552292");

                    b.HasIndex("TrainingProgramCode");

                    b.ToTable("TrainingProgramSyllabus", (string)null);
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.AssessmentScheme", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Syllabus", "Syllabus")
                        .WithMany("AssessmentSchemes")
                        .HasForeignKey("SyllabusId")
                        .HasPrincipalKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Assessmen__sylla__2EDAF651");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Assignment", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Module", "Module")
                        .WithMany("Assignments")
                        .HasForeignKey("ModuleId")
                        .HasPrincipalKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Assignment_Module");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Class", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.AttendeeType", "AttendeeLevel")
                        .WithMany("Classes")
                        .HasForeignKey("AttendeeLevelId")
                        .HasPrincipalKey("AttendeeTypeId")
                        .HasConstraintName("FK_Class_AttendeeType");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Fsu", "Fsu")
                        .WithMany("Classes")
                        .HasForeignKey("FsuId")
                        .HasPrincipalKey("FsuId")
                        .HasConstraintName("FK_Class_FSU");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Location", "Location")
                        .WithMany("Classes")
                        .HasForeignKey("LocationId")
                        .HasPrincipalKey("LocationId")
                        .HasConstraintName("FK_Class_Location");

                    b.HasOne("TrainingProgramManagementAPI.Entities.TrainingProgram", "TrainingProgramCodeNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("TrainingProgramCode")
                        .HasPrincipalKey("TrainingProgramCode")
                        .HasConstraintName("FK_Class_TrainingProgram");

                    b.Navigation("AttendeeLevel");

                    b.Navigation("Fsu");

                    b.Navigation("Location");

                    b.Navigation("TrainingProgramCodeNavigation");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.ClassUser", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Class", "Class")
                        .WithMany("ClassUsers")
                        .HasForeignKey("ClassId")
                        .HasPrincipalKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassUser__Class__3493CFA7");

                    b.HasOne("TrainingProgramManagementAPI.Entities.User", "User")
                        .WithMany("ClassUsers")
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassUser__UserI__3587F3E0");

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailSend", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.User", "Sender")
                        .WithMany("EmailSends")
                        .HasForeignKey("SenderId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_EmailSend_Sender");

                    b.HasOne("TrainingProgramManagementAPI.Entities.EmailTemplate", "Template")
                        .WithMany("EmailSends")
                        .HasForeignKey("TemplateId")
                        .HasPrincipalKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EmailSend_Template");

                    b.Navigation("Sender");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailSendStudent", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.EmailSend", "Email")
                        .WithMany("EmailSendStudents")
                        .HasForeignKey("EmailId")
                        .HasPrincipalKey("EmailSendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EmailSendStudent_Email");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Receiver")
                        .WithMany("EmailSendStudents")
                        .HasForeignKey("ReceiverId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EmailSendStudent_Receiver");

                    b.Navigation("Email");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Quiz", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Module", "Module")
                        .WithMany("Quizzes")
                        .HasForeignKey("ModuleId")
                        .HasPrincipalKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Quiz_Module");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.QuizStudent", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Quiz", "Quiz")
                        .WithMany("QuizStudents")
                        .HasForeignKey("QuizId")
                        .HasPrincipalKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_QuizStudent_Quiz");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Student")
                        .WithMany("QuizStudents")
                        .HasForeignKey("StudentId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_QuizStudent_Student");

                    b.Navigation("Quiz");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.ReservedClass", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Class", "Class")
                        .WithMany("ReservedClasses")
                        .HasForeignKey("ClassId")
                        .HasPrincipalKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ReservedClass_Class");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Student")
                        .WithMany("ReservedClasses")
                        .HasForeignKey("StudentId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_ReservedClass_Student");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.RolePermission", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.UserPermission", "Permission")
                        .WithOne("RolePermission")
                        .HasForeignKey("TrainingProgramManagementAPI.Entities.RolePermission", "PermissionId")
                        .HasPrincipalKey("TrainingProgramManagementAPI.Entities.UserPermission", "UserPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__Permi__3F115E1A");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Role", "Role")
                        .WithOne("RolePermission")
                        .HasForeignKey("TrainingProgramManagementAPI.Entities.RolePermission", "RoleId")
                        .HasPrincipalKey("TrainingProgramManagementAPI.Entities.Role", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RolePermi__RoleI__40058253");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Score", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Assignment", "Assignment")
                        .WithMany("Scores")
                        .HasForeignKey("AssignmentId")
                        .HasPrincipalKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Score_Assignment");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Score_Student");

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Student", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId")
                        .HasPrincipalKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Student__MajorId__42E1EEFE");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.StudentClass", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .HasPrincipalKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentClass_Class");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentClass_Student");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.StudentModule", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Module", "Module")
                        .WithMany("StudentModules")
                        .HasForeignKey("ModuleId")
                        .HasPrincipalKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentModule_Module");

                    b.HasOne("TrainingProgramManagementAPI.Entities.Student", "Student")
                        .WithMany("StudentModules")
                        .HasForeignKey("StudentId")
                        .HasPrincipalKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentModule_Student");

                    b.Navigation("Module");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusDay", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Syllabus", "Syllabus")
                        .WithMany("SyllabusDays")
                        .HasForeignKey("SyllabusId")
                        .HasPrincipalKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__SyllabusD__sylla__47A6A41B");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusUnit", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.SyllabusDay", "SyllabusDay")
                        .WithMany("SyllabusUnits")
                        .HasForeignKey("SyllabusDayId")
                        .HasPrincipalKey("SyllabusDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__SyllabusU__sylla__489AC854");

                    b.Navigation("SyllabusDay");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingMaterial", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.UnitChapter", "UnitChapter")
                        .WithMany("TrainingMaterials")
                        .HasForeignKey("UnitChapterId")
                        .HasPrincipalKey("UnitChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TrainingM__unit___498EEC8D");

                    b.Navigation("UnitChapter");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingProgram", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.TechnicalCode", "TechnicalCode")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("TechnicalCodeId")
                        .HasPrincipalKey("TechnicalCodeId")
                        .HasConstraintName("FK_TrainingProgram_TechnicalCode");

                    b.HasOne("TrainingProgramManagementAPI.Entities.TechnicalGroup", "TechnicalGroup")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("TechnicalGroupId")
                        .HasPrincipalKey("TechnicalGroupId")
                        .HasConstraintName("FK_TrainingProgram_TechnicalGroup");

                    b.HasOne("TrainingProgramManagementAPI.Entities.User", "User")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .HasConstraintName("FK_TrainingProgram_User");

                    b.Navigation("TechnicalCode");

                    b.Navigation("TechnicalGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingProgramModule", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .HasPrincipalKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrainingProgramModule_Module");

                    b.HasOne("TrainingProgramManagementAPI.Entities.TrainingProgram", "Program")
                        .WithOne()
                        .HasForeignKey("TrainingProgramManagementAPI.Entities.TrainingProgramModule", "ProgramId")
                        .HasPrincipalKey("TrainingProgramManagementAPI.Entities.TrainingProgram", "TrainingProgramCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrainingProgramModule_Program");

                    b.Navigation("Module");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.UnitChapter", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.DeliveryType", "DeliveryType")
                        .WithMany("UnitChapters")
                        .HasForeignKey("DeliveryTypeId")
                        .HasPrincipalKey("DeliveryTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__UnitChapt__deliv__51300E55");

                    b.HasOne("TrainingProgramManagementAPI.Entities.OutputStandard", "OutputStandard")
                        .WithMany("UnitChapters")
                        .HasForeignKey("OutputStandardId")
                        .HasPrincipalKey("OutputStandardId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__UnitChapt__outpu__5224328E");

                    b.HasOne("TrainingProgramManagementAPI.Entities.SyllabusUnit", "SyllabusUnit")
                        .WithMany("UnitChapters")
                        .HasForeignKey("SyllabusUnitId")
                        .HasPrincipalKey("SyllabusUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__UnitChapt__sylla__531856C7");

                    b.Navigation("DeliveryType");

                    b.Navigation("OutputStandard");

                    b.Navigation("SyllabusUnit");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.User", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasPrincipalKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Users_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TrainingProgramSyllabus", b =>
                {
                    b.HasOne("TrainingProgramManagementAPI.Entities.Syllabus", null)
                        .WithMany()
                        .HasForeignKey("SyllabusId")
                        .HasPrincipalKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TrainingP__sylla__4F47C5E3");

                    b.HasOne("TrainingProgramManagementAPI.Entities.TrainingProgram", null)
                        .WithMany()
                        .HasForeignKey("TrainingProgramCode")
                        .HasPrincipalKey("TrainingProgramCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TrainingP__train__503BEA1C");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Assignment", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.AttendeeType", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Class", b =>
                {
                    b.Navigation("ClassUsers");

                    b.Navigation("ReservedClasses");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.DeliveryType", b =>
                {
                    b.Navigation("UnitChapters");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailSend", b =>
                {
                    b.Navigation("EmailSendStudents");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.EmailTemplate", b =>
                {
                    b.Navigation("EmailSends");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Fsu", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Location", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Major", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Module", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Quizzes");

                    b.Navigation("StudentModules");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.OutputStandard", b =>
                {
                    b.Navigation("UnitChapters");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Quiz", b =>
                {
                    b.Navigation("QuizStudents");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Role", b =>
                {
                    b.Navigation("RolePermission");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Student", b =>
                {
                    b.Navigation("EmailSendStudents");

                    b.Navigation("QuizStudents");

                    b.Navigation("ReservedClasses");

                    b.Navigation("Scores");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentModules");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.Syllabus", b =>
                {
                    b.Navigation("AssessmentSchemes");

                    b.Navigation("SyllabusDays");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusDay", b =>
                {
                    b.Navigation("SyllabusUnits");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.SyllabusUnit", b =>
                {
                    b.Navigation("UnitChapters");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TechnicalCode", b =>
                {
                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TechnicalGroup", b =>
                {
                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.TrainingProgram", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.UnitChapter", b =>
                {
                    b.Navigation("TrainingMaterials");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.User", b =>
                {
                    b.Navigation("ClassUsers");

                    b.Navigation("EmailSends");

                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("TrainingProgramManagementAPI.Entities.UserPermission", b =>
                {
                    b.Navigation("RolePermission");
                });
#pragma warning restore 612, 618
        }
    }
}
